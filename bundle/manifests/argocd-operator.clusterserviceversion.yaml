apiVersion: operators.coreos.com/v1alpha1
kind: ClusterServiceVersion
metadata:
  annotations:
    alm-examples: |-
      [
        {
          "apiVersion": "argoproj.io/v1alpha1",
          "kind": "AppProject",
          "metadata": {
            "name": "example"
          },
          "spec": null
        },
        {
          "apiVersion": "argoproj.io/v1alpha1",
          "kind": "Application",
          "metadata": {
            "name": "example"
          },
          "spec": null
        },
        {
          "apiVersion": "argoproj.io/v1alpha1",
          "kind": "ApplicationSet",
          "metadata": {
            "name": "example"
          },
          "spec": null
        },
        {
          "apiVersion": "argoproj.io/v1alpha1",
          "kind": "ArgoCD",
          "metadata": {
            "name": "argocd-sample"
          },
          "spec": {
            "controller": {
              "resources": {
                "limits": {
                  "cpu": "2000m",
                  "memory": "2048Mi"
                },
                "requests": {
                  "cpu": "250m",
                  "memory": "1024Mi"
                }
              }
            },
            "ha": {
              "enabled": false,
              "resources": {
                "limits": {
                  "cpu": "500m",
                  "memory": "256Mi"
                },
                "requests": {
                  "cpu": "250m",
                  "memory": "128Mi"
                }
              }
            },
            "redis": {
              "resources": {
                "limits": {
                  "cpu": "500m",
                  "memory": "256Mi"
                },
                "requests": {
                  "cpu": "250m",
                  "memory": "128Mi"
                }
              }
            },
            "repo": {
              "resources": {
                "limits": {
                  "cpu": "1000m",
                  "memory": "512Mi"
                },
                "requests": {
                  "cpu": "250m",
                  "memory": "256Mi"
                }
              }
            },
            "server": {
              "resources": {
                "limits": {
                  "cpu": "500m",
                  "memory": "256Mi"
                },
                "requests": {
                  "cpu": "125m",
                  "memory": "128Mi"
                }
              },
              "route": {
                "enabled": true
              }
            },
            "sso": {
              "dex": {
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "128Mi"
                  }
                }
              },
              "provider": "dex"
            }
          }
        },
        {
          "apiVersion": "argoproj.io/v1alpha1",
          "kind": "ArgoCDExport",
          "metadata": {
            "name": "argocdexport-sample"
          },
          "spec": {
            "argocd": "argocd-sample"
          }
        },
        {
          "apiVersion": "argoproj.io/v1alpha1",
          "kind": "NotificationsConfiguration",
          "metadata": {
            "name": "default-notifications-configuration"
          },
          "spec": {
            "templates": {
              "template.app-created": "email:\n  subject: Application {{.app.metadata.name}} has been created.\nmessage: Application {{.app.metadata.name}} has been created.\nteams:\n  title: Application {{.app.metadata.name}} has been created.",
              "template.app-deleted": "email:\n  subject: Application {{.app.metadata.name}} has been deleted.\nmessage: Application {{.app.metadata.name}} has been deleted.\nteams:\n  title: Application {{.app.metadata.name}} has been deleted.",
              "template.app-deployed": "email:\n  subject: New version of an application {{.app.metadata.name}} is up and running.\nmessage: |\n  {{if eq .serviceType \"slack\"}}:white_check_mark:{{end}} Application {{.app.metadata.name}} is now running new version of deployments manifests.\nslack:\n  attachments: |\n    [{\n      \"title\": \"{{ .app.metadata.name}}\",\n      \"title_link\":\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\",\n      \"color\": \"#18be52\",\n      \"fields\": [\n      {\n        \"title\": \"Sync Status\",\n        \"value\": \"{{.app.status.sync.status}}\",\n        \"short\": true\n      },\n      {\n        \"title\": \"Repository\",\n        \"value\": \"{{.app.spec.source.repoURL}}\",\n        \"short\": true\n      },\n      {\n        \"title\": \"Revision\",\n        \"value\": \"{{.app.status.sync.revision}}\",\n        \"short\": true\n      }\n      {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"title\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\",\n        \"short\": true\n      }\n      {{end}}\n      ]\n    }]\n  deliveryPolicy: Post\n  groupingKey: \"\"\n  notifyBroadcast: false\nteams:\n  facts: |\n    [{\n      \"name\": \"Sync Status\",\n      \"value\": \"{{.app.status.sync.status}}\"\n    },\n    {\n      \"name\": \"Repository\",\n      \"value\": \"{{.app.spec.source.repoURL}}\"\n    },\n    {\n      \"name\": \"Revision\",\n      \"value\": \"{{.app.status.sync.revision}}\"\n    }\n    {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"name\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\"\n      }\n    {{end}}\n    ]\n  potentialAction: |-\n    [{\n      \"@type\":\"OpenUri\",\n      \"name\":\"Operation Application\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\"\n      }]\n    },\n    {\n      \"@type\":\"OpenUri\",\n      \"name\":\"Open Repository\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.app.spec.source.repoURL | call .repo.RepoURLToHTTPS}}\"\n      }]\n    }]\n  themeColor: '#000080'\n  title: New version of an application {{.app.metadata.name}} is up and running.",
              "template.app-health-degraded": "email:\n  subject: Application {{.app.metadata.name}} has degraded.\nmessage: |\n  {{if eq .serviceType \"slack\"}}:exclamation:{{end}} Application {{.app.metadata.name}} has degraded.\n  Application details: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}.\nslack:\n  attachments: |\n    [{\n      \"title\": \"{{ .app.metadata.name}}\",\n      \"title_link\": \"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\",\n      \"color\": \"#f4c030\",\n      \"fields\": [\n      {\n        \"title\": \"Health Status\",\n        \"value\": \"{{.app.status.health.status}}\",\n        \"short\": true\n      },\n      {\n        \"title\": \"Repository\",\n        \"value\": \"{{.app.spec.source.repoURL}}\",\n        \"short\": true\n      }\n      {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"title\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\",\n        \"short\": true\n      }\n      {{end}}\n      ]\n    }]\n  deliveryPolicy: Post\n  groupingKey: \"\"\n  notifyBroadcast: false\nteams:\n  facts: |\n    [{\n      \"name\": \"Health Status\",\n      \"value\": \"{{.app.status.health.status}}\"\n    },\n    {\n      \"name\": \"Repository\",\n      \"value\": \"{{.app.spec.source.repoURL}}\"\n    }\n    {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"name\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\"\n      }\n    {{end}}\n    ]\n  potentialAction: |\n    [{\n      \"@type\":\"OpenUri\",\n      \"name\":\"Open Application\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\"\n      }]\n    },\n    {\n      \"@type\":\"OpenUri\",\n      \"name\":\"Open Repository\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.app.spec.source.repoURL | call .repo.RepoURLToHTTPS}}\"\n      }]\n    }]\n  themeColor: '#FF0000'\n  title: Application {{.app.metadata.name}} has degraded.",
              "template.app-sync-failed": "email:\n  subject: Failed to sync application {{.app.metadata.name}}.\nmessage: |\n  {{if eq .serviceType \"slack\"}}:exclamation:{{end}}  The sync operation of application {{.app.metadata.name}} has failed at {{.app.status.operationState.finishedAt}} with the following error: {{.app.status.operationState.message}}\n  Sync operation details are available at: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true .\nslack:\n  attachments: |\n    [{\n      \"title\": \"{{ .app.metadata.name}}\",\n      \"title_link\":\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\",\n      \"color\": \"#E96D76\",\n      \"fields\": [\n      {\n        \"title\": \"Sync Status\",\n        \"value\": \"{{.app.status.sync.status}}\",\n        \"short\": true\n      },\n      {\n        \"title\": \"Repository\",\n        \"value\": \"{{.app.spec.source.repoURL}}\",\n        \"short\": true\n      }\n      {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"title\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\",\n        \"short\": true\n      }\n      {{end}}\n      ]\n    }]\n  deliveryPolicy: Post\n  groupingKey: \"\"\n  notifyBroadcast: false\nteams:\n  facts: |\n    [{\n      \"name\": \"Sync Status\",\n      \"value\": \"{{.app.status.sync.status}}\"\n    },\n    {\n      \"name\": \"Failed at\",\n      \"value\": \"{{.app.status.operationState.finishedAt}}\"\n    },\n    {\n      \"name\": \"Repository\",\n      \"value\": \"{{.app.spec.source.repoURL}}\"\n    }\n    {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"name\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\"\n      }\n    {{end}}\n    ]\n  potentialAction: |-\n    [{\n      \"@type\":\"OpenUri\",\n      \"name\":\"Open Operation\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true\"\n      }]\n    },\n    {\n      \"@type\":\"OpenUri\",\n      \"name\":\"Open Repository\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.app.spec.source.repoURL | call .repo.RepoURLToHTTPS}}\"\n      }]\n    }]\n  themeColor: '#FF0000'\n  title: Failed to sync application {{.app.metadata.name}}.",
              "template.app-sync-running": "email:\n  subject: Start syncing application {{.app.metadata.name}}.\nmessage: |\n  The sync operation of application {{.app.metadata.name}} has started at {{.app.status.operationState.startedAt}}.\n  Sync operation details are available at: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true .\nslack:\n  attachments: |\n    [{\n      \"title\": \"{{ .app.metadata.name}}\",\n      \"title_link\":\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\",\n      \"color\": \"#0DADEA\",\n      \"fields\": [\n      {\n        \"title\": \"Sync Status\",\n        \"value\": \"{{.app.status.sync.status}}\",\n        \"short\": true\n      },\n      {\n        \"title\": \"Repository\",\n        \"value\": \"{{.app.spec.source.repoURL}}\",\n        \"short\": true\n      }\n      {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"title\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\",\n        \"short\": true\n      }\n      {{end}}\n      ]\n    }]\n  deliveryPolicy: Post\n  groupingKey: \"\"\n  notifyBroadcast: false\nteams:\n  facts: |\n    [{\n      \"name\": \"Sync Status\",\n      \"value\": \"{{.app.status.sync.status}}\"\n    },\n    {\n      \"name\": \"Started at\",\n      \"value\": \"{{.app.status.operationState.startedAt}}\"\n    },\n    {\n      \"name\": \"Repository\",\n      \"value\": \"{{.app.spec.source.repoURL}}\"\n    }\n    {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"name\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\"\n      }\n    {{end}}\n    ]\n  potentialAction: |-\n    [{\n      \"@type\":\"OpenUri\",\n      \"name\":\"Open Operation\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true\"\n      }]\n    },\n    {\n      \"@type\":\"OpenUri\",\n      \"name\":\"Open Repository\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.app.spec.source.repoURL | call .repo.RepoURLToHTTPS}}\"\n      }]\n    }]\n  title: Start syncing application {{.app.metadata.name}}.",
              "template.app-sync-status-unknown": "email:\n  subject: Application {{.app.metadata.name}} sync status is 'Unknown'\nmessage: |\n  {{if eq .serviceType \"slack\"}}:exclamation:{{end}} Application {{.app.metadata.name}} sync is 'Unknown'.\n  Application details: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}.\n  {{if ne .serviceType \"slack\"}}\n  {{range $c := .app.status.conditions}}\n      * {{$c.message}}\n  {{end}}\n  {{end}}\nslack:\n  attachments: |\n    [{\n      \"title\": \"{{ .app.metadata.name}}\",\n      \"title_link\":\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\",\n      \"color\": \"#E96D76\",\n      \"fields\": [\n      {\n        \"title\": \"Sync Status\",\n        \"value\": \"{{.app.status.sync.status}}\",\n        \"short\": true\n      },\n      {\n        \"title\": \"Repository\",\n        \"value\": \"{{.app.spec.source.repoURL}}\",\n        \"short\": true\n      }\n      {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"title\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\",\n        \"short\": true\n      }\n      {{end}}\n      ]\n    }]\n  deliveryPolicy: Post\n  groupingKey: \"\"\n  notifyBroadcast: false\nteams:\n  facts: |\n    [{\n      \"name\": \"Sync Status\",\n      \"value\": \"{{.app.status.sync.status}}\"\n    },\n    {\n      \"name\": \"Repository\",\n      \"value\": \"{{.app.spec.source.repoURL}}\"\n    }\n    {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"name\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\"\n      }\n    {{end}}\n    ]\n  potentialAction: |-\n    [{\n      \"@type\":\"OpenUri\",\n      \"name\":\"Open Application\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\"\n      }]\n    },\n    {\n      \"@type\":\"OpenUri\",\n      \"name\":\"Open Repository\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.app.spec.source.repoURL | call .repo.RepoURLToHTTPS}}\"\n      }]\n    }]\n  title: Application {{.app.metadata.name}} sync status is 'Unknown'",
              "template.app-sync-succeeded": "email:\n  subject: Application {{.app.metadata.name}} has been successfully synced.\nmessage: |\n  {{if eq .serviceType \"slack\"}}:white_check_mark:{{end}} Application {{.app.metadata.name}} has been successfully synced at {{.app.status.operationState.finishedAt}}.\n  Sync operation details are available at: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true .\nslack:\n  attachments: |\n    [{\n      \"title\": \"{{ .app.metadata.name}}\",\n      \"title_link\":\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\",\n      \"color\": \"#18be52\",\n      \"fields\": [\n      {\n        \"title\": \"Sync Status\",\n        \"value\": \"{{.app.status.sync.status}}\",\n        \"short\": true\n      },\n      {\n        \"title\": \"Repository\",\n        \"value\": \"{{.app.spec.source.repoURL}}\",\n        \"short\": true\n      }\n      {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"title\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\",\n        \"short\": true\n      }\n      {{end}}\n      ]\n    }]\n  deliveryPolicy: Post\n  groupingKey: \"\"\n  notifyBroadcast: false\nteams:\n  facts: |\n    [{\n      \"name\": \"Sync Status\",\n      \"value\": \"{{.app.status.sync.status}}\"\n    },\n    {\n      \"name\": \"Synced at\",\n      \"value\": \"{{.app.status.operationState.finishedAt}}\"\n    },\n    {\n      \"name\": \"Repository\",\n      \"value\": \"{{.app.spec.source.repoURL}}\"\n    }\n    {{range $index, $c := .app.status.conditions}}\n      {{if not $index}},{{end}}\n      {{if $index}},{{end}}\n      {\n        \"name\": \"{{$c.type}}\",\n        \"value\": \"{{$c.message}}\"\n      }\n    {{end}}\n    ]\n  potentialAction: |-\n    [{\n      \"@type\":\"OpenUri\",\n      \"name\":\"Operation Details\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true\"\n      }]\n    },\n    {\n      \"@type\":\"OpenUri\",\n      \"name\":\"Open Repository\",\n      \"targets\":[{\n        \"os\":\"default\",\n        \"uri\":\"{{.app.spec.source.repoURL | call .repo.RepoURLToHTTPS}}\"\n      }]\n    }]\n  themeColor: '#000080'\n  title: Application {{.app.metadata.name}} has been successfully synced"
            },
            "triggers": {
              "trigger.on-created": "- description: Application is created.\n  oncePer: app.metadata.name\n  send:\n  - app-created\n  when: \"true\"",
              "trigger.on-deleted": "- description: Application is deleted.\n  oncePer: app.metadata.name\n  send:\n  - app-deleted\n  when: app.metadata.deletionTimestamp != nil",
              "trigger.on-deployed": "- description: Application is synced and healthy. Triggered once per commit.\n  oncePer: app.status.operationState.syncResult.revision\n  send:\n  - app-deployed\n  when: app.status.operationState.phase in ['Succeeded'] and app.status.health.status\n      == 'Healthy'",
              "trigger.on-health-degraded": "- description: Application has degraded\n  send:\n  - app-health-degraded\n  when: app.status.health.status == 'Degraded'",
              "trigger.on-sync-failed": "- description: Application syncing has failed\n  send:\n  - app-sync-failed\n  when: app.status.operationState.phase in ['Error', 'Failed']",
              "trigger.on-sync-running": "- description: Application is being synced\n  send:\n  - app-sync-running\n  when: app.status.operationState.phase in ['Running']",
              "trigger.on-sync-status-unknown": "- description: Application status is 'Unknown'\n  send:\n  - app-sync-status-unknown\n  when: app.status.sync.status == 'Unknown'",
              "trigger.on-sync-succeeded": "- description: Application syncing has succeeded\n  send:\n  - app-sync-succeeded\n  when: app.status.operationState.phase in ['Succeeded']"
            }
          }
        },
        {
          "apiVersion": "argoproj.io/v1beta1",
          "kind": "ArgoCD",
          "metadata": {
            "name": "argocd-sample"
          },
          "spec": {
            "controller": {
              "resources": {
                "limits": {
                  "cpu": "2000m",
                  "memory": "2048Mi"
                },
                "requests": {
                  "cpu": "250m",
                  "memory": "1024Mi"
                }
              }
            },
            "ha": {
              "enabled": false,
              "resources": {
                "limits": {
                  "cpu": "500m",
                  "memory": "256Mi"
                },
                "requests": {
                  "cpu": "250m",
                  "memory": "128Mi"
                }
              }
            },
            "redis": {
              "resources": {
                "limits": {
                  "cpu": "500m",
                  "memory": "256Mi"
                },
                "requests": {
                  "cpu": "250m",
                  "memory": "128Mi"
                }
              }
            },
            "repo": {
              "resources": {
                "limits": {
                  "cpu": "1000m",
                  "memory": "512Mi"
                },
                "requests": {
                  "cpu": "250m",
                  "memory": "256Mi"
                }
              }
            },
            "server": {
              "resources": {
                "limits": {
                  "cpu": "500m",
                  "memory": "256Mi"
                },
                "requests": {
                  "cpu": "125m",
                  "memory": "128Mi"
                }
              },
              "route": {
                "enabled": true
              }
            },
            "sso": {
              "dex": {
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "128Mi"
                  }
                }
              },
              "provider": "dex"
            }
          }
        }
      ]
    capabilities: Deep Insights
    categories: Integration & Delivery
    certified: "false"
    createdAt: "2024-10-16T08:53:24Z"
    description: Argo CD is a declarative, GitOps continuous delivery tool for Kubernetes.
    operators.operatorframework.io/builder: operator-sdk-v1.35.0
    operators.operatorframework.io/project_layout: go.kubebuilder.io/v4
    repository: https://github.com/argoproj-labs/argocd-operator
    support: Argo CD
  name: argocd-operator.v0.13.0
  namespace: placeholder
spec:
  apiservicedefinitions: {}
  customresourcedefinitions:
    owned:
    - description: An Application is a group of Kubernetes resources as defined by
        a manifest.
      displayName: Application
      kind: Application
      name: applications.argoproj.io
      version: v1alpha1
    - description: An ApplicationSet is a group or set of Application resources.
      displayName: ApplicationSet
      kind: ApplicationSet
      name: applicationsets.argoproj.io
      version: v1alpha1
    - description: An AppProject is a logical grouping of Argo CD Applications.
      displayName: AppProject
      kind: AppProject
      name: appprojects.argoproj.io
      version: v1alpha1
    - description: ArgoCDExport is the Schema for the argocdexports API
      displayName: Argo CDExport
      kind: ArgoCDExport
      name: argocdexports.argoproj.io
      resources:
      - kind: ArgoCD
        name: ""
        version: v1alpha1
      - kind: ArgoCDExport
        name: ""
        version: v1alpha1
      - kind: ConfigMap
        name: ""
        version: v1
      - kind: CronJob
        name: ""
        version: v1
      - kind: Deployment
        name: ""
        version: v1
      - kind: Ingress
        name: ""
        version: v1
      - kind: Job
        name: ""
        version: v1
      - kind: PersistentVolumeClaim
        name: ""
        version: v1
      - kind: Pod
        name: ""
        version: v1
      - kind: Prometheus
        name: ""
        version: v1
      - kind: ReplicaSet
        name: ""
        version: v1
      - kind: Route
        name: ""
        version: v1
      - kind: Secret
        name: ""
        version: v1
      - kind: Service
        name: ""
        version: v1
      - kind: ServiceMonitor
        name: ""
        version: v1
      - kind: StatefulSet
        name: ""
        version: v1
      specDescriptors:
      - description: Argocd is the name of the ArgoCD instance to export.
        displayName: ArgoCD
        path: argocd
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: Schedule in Cron format, see https://en.wikipedia.org/wiki/Cron.
        displayName: Schedule
        path: schedule
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: Storage defines the storage configuration options.
        displayName: Storage
        path: storage
      statusDescriptors:
      - description: 'Phase is a simple, high-level summary of where the ArgoCDExport
          is in its lifecycle. There are five possible phase values: Pending: The
          ArgoCDExport has been accepted by the Kubernetes system, but one or more
          of the required resources have not been created. Running: All of the containers
          for the ArgoCDExport are still running, or in the process of starting or
          restarting. Succeeded: All containers for the ArgoCDExport have terminated
          in success, and will not be restarted. Failed: At least one container has
          terminated in failure, either exited with non-zero status or was terminated
          by the system. Unknown: For some reason the state of the ArgoCDExport could
          not be obtained.'
        displayName: Phase
        path: phase
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:text
      version: v1alpha1
    - description: ArgoCD is the Schema for the argocds API
      displayName: Argo CD
      kind: ArgoCD
      name: argocds.argoproj.io
      resources:
      - kind: ArgoCD
        name: ""
        version: v1alpha1
      - kind: ArgoCDExport
        name: ""
        version: v1alpha1
      - kind: ConfigMap
        name: ""
        version: v1
      - kind: CronJob
        name: ""
        version: v1
      - kind: Deployment
        name: ""
        version: v1
      - kind: Ingress
        name: ""
        version: v1
      - kind: Job
        name: ""
        version: v1
      - kind: PersistentVolumeClaim
        name: ""
        version: v1
      - kind: Pod
        name: ""
        version: v1
      - kind: Prometheus
        name: ""
        version: v1
      - kind: ReplicaSet
        name: ""
        version: v1
      - kind: Route
        name: ""
        version: v1
      - kind: Secret
        name: ""
        version: v1
      - kind: Service
        name: ""
        version: v1
      - kind: ServiceMonitor
        name: ""
        version: v1
      - kind: StatefulSet
        name: ""
        version: v1
      specDescriptors:
      - description: ApplicationInstanceLabelKey is the key name where Argo CD injects
          the app name as a tracking label.
        displayName: Application Instance Label Key'
        path: applicationInstanceLabelKey
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:text
        - urn:alm:descriptor:com.tectonic.ui:advanced
      - description: Host is the hostname to use for Ingress/Route resources.
        displayName: Host
        path: applicationSet.webhookServer.host
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:Server
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: Enabled will toggle the creation of the Ingress.
        displayName: Ingress Enabled'
        path: applicationSet.webhookServer.ingress.enabled
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:Grafana
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:Prometheus
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:Server
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
      - description: Enabled will toggle the creation of the OpenShift Route.
        displayName: Route Enabled'
        path: applicationSet.webhookServer.route.enabled
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:Grafana
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:Prometheus
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:Server
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
      - description: ConfigManagementPlugins is used to specify additional config
          management plugins.
        displayName: Config Management Plugins'
        path: configManagementPlugins
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:text
        - urn:alm:descriptor:com.tectonic.ui:advanced
      - description: Operation is the number of application operation processors.
        displayName: Operation Processor Count'
        path: controller.processors.operation
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:Controller
        - urn:alm:descriptor:com.tectonic.ui:number
      - description: Status is the number of application status processors.
        displayName: Status Processor Count'
        path: controller.processors.status
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:Controller
        - urn:alm:descriptor:com.tectonic.ui:number
      - description: Resources defines the Compute Resources required by the container
          for the Application Controller.
        displayName: Resource Requirements'
        path: controller.resources
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:Controller
        - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
      - description: Config is the dex connector configuration.
        displayName: Configuration
        path: dex.config
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:Dex
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: Image is the Dex container image.
        displayName: Image
        path: dex.image
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:Dex
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: OpenShiftOAuth enables OpenShift OAuth authentication for the
          Dex server.
        displayName: OpenShift OAuth Enabled'
        path: dex.openShiftOAuth
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:Dex
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
      - description: Resources defines the Compute Resources required by the container
          for Dex.
        displayName: Resource Requirements'
        path: dex.resources
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:Dex
        - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
      - description: Version is the Dex container image tag.
        displayName: Version
        path: dex.version
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:Dex
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: GAAnonymizeUsers toggles user IDs being hashed before sending
          to google analytics.
        displayName: Google Analytics Anonymize Users'
        path: gaAnonymizeUsers
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
        - urn:alm:descriptor:com.tectonic.ui:advanced
      - description: GATrackingID is the google analytics tracking ID to use.
        displayName: Google Analytics Tracking ID'
        path: gaTrackingID
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:text
        - urn:alm:descriptor:com.tectonic.ui:advanced
      - description: Enabled will toggle Grafana support globally for ArgoCD.
        displayName: Enabled
        path: grafana.enabled
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:Grafana
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
      - description: Host is the hostname to use for Ingress/Route resources.
        displayName: Host
        path: grafana.host
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:Grafana
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: Image is the Grafana container image.
        displayName: Image
        path: grafana.image
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:Grafana
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: Enabled will toggle the creation of the Ingress.
        displayName: Ingress Enabled'
        path: grafana.ingress.enabled
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:Grafana
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:Prometheus
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:Server
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
      - description: Resources defines the Compute Resources required by the container
          for Grafana.
        displayName: Resource Requirements'
        path: grafana.resources
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:Grafana
        - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
      - description: Enabled will toggle the creation of the OpenShift Route.
        displayName: Route Enabled'
        path: grafana.route.enabled
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:Grafana
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:Prometheus
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:Server
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
      - description: Size is the replica count for the Grafana Deployment.
        displayName: Size
        path: grafana.size
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:Grafana
        - urn:alm:descriptor:com.tectonic.ui:podCount
      - description: Version is the Grafana container image tag.
        displayName: Version
        path: grafana.version
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:Grafana
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: Enabled will toggle HA support globally for Argo CD.
        displayName: Enabled
        path: ha.enabled
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:HA
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
      - description: HelpChatText is the text for getting chat help, defaults to "Chat
          now!"
        displayName: Help Chat Text'
        path: helpChatText
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:text
        - urn:alm:descriptor:com.tectonic.ui:advanced
      - description: HelpChatURL is the URL for getting chat help, this will typically
          be your Slack channel for support.
        displayName: Help Chat URL'
        path: helpChatURL
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:text
        - urn:alm:descriptor:com.tectonic.ui:advanced
      - description: Image is the ArgoCD container image for all ArgoCD components.
        displayName: Image
        path: image
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:ArgoCD
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: Name of an ArgoCDExport from which to import data.
        displayName: Name
        path: import.name
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:Import
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: Namespace for the ArgoCDExport, defaults to the same namespace
          as the ArgoCD.
        displayName: Namespace
        path: import.namespace
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:Import
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: InitialRepositories to configure Argo CD with upon creation of
          the cluster.
        displayName: Initial Repositories'
        path: initialRepositories
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:text
        - urn:alm:descriptor:com.tectonic.ui:advanced
      - description: KustomizeVersions is a listing of configured versions of Kustomize
          to be made available within ArgoCD.
        displayName: Kustomize Build Options'
        path: kustomizeVersions
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:text
        - urn:alm:descriptor:com.tectonic.ui:advanced
      - description: OIDCConfig is the OIDC configuration as an alternative to dex.
        displayName: OIDC Config'
        path: oidcConfig
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:text
        - urn:alm:descriptor:com.tectonic.ui:advanced
      - description: Enabled will toggle Prometheus support globally for ArgoCD.
        displayName: Enabled
        path: prometheus.enabled
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:Prometheus
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
      - description: Host is the hostname to use for Ingress/Route resources.
        displayName: Host
        path: prometheus.host
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:Prometheus
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: Enabled will toggle the creation of the Ingress.
        displayName: Ingress Enabled'
        path: prometheus.ingress.enabled
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:Grafana
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:Prometheus
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:Server
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
      - description: Enabled will toggle the creation of the OpenShift Route.
        displayName: Route Enabled'
        path: prometheus.route.enabled
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:Grafana
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:Prometheus
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:Server
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
      - description: Size is the replica count for the Prometheus StatefulSet.
        displayName: Size
        path: prometheus.size
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:Prometheus
        - urn:alm:descriptor:com.tectonic.ui:podCount
      - description: DefaultPolicy is the name of the default role which Argo CD will
          falls back to, when authorizing API requests (optional). If omitted or empty,
          users may be still be able to login, but will see no apps, projects, etc...
        displayName: Default Policy'
        path: rbac.defaultPolicy
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:RBAC
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: 'Policy is CSV containing user-defined RBAC policies and role
          definitions. Policy rules are in the form: p, subject, resource, action,
          object, effect Role definitions and bindings are in the form: g, subject,
          inherited-subject See https://github.com/argoproj/argo-cd/blob/master/docs/operator-manual/rbac.md
          for additional information.'
        displayName: Policy
        path: rbac.policy
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:RBAC
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: 'Scopes controls which OIDC scopes to examine during rbac enforcement
          (in addition to `sub` scope). If omitted, defaults to: ''[groups]''.'
        displayName: Scopes
        path: rbac.scopes
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:RBAC
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: Image is the Redis container image.
        displayName: Image
        path: redis.image
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:Redis
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: Resources defines the Compute Resources required by the container
          for Redis.
        displayName: Resource Requirements'
        path: redis.resources
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:Redis
        - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
      - description: Version is the Redis container image tag.
        displayName: Version
        path: redis.version
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:Redis
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: Resources defines the Compute Resources required by the container
          for Redis.
        displayName: Resource Requirements'
        path: repo.resources
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:Repo
        - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
      - description: ResourceActions customizes resource action behavior.
        displayName: Resource Action Customizations'
        path: resourceActions
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:text
        - urn:alm:descriptor:com.tectonic.ui:advanced
      - description: 'Deprecated field. Support dropped in v1beta1 version. ResourceCustomizations
          customizes resource behavior. Keys are in the form: group/Kind. Please note
          that this is being deprecated in favor of ResourceHealthChecks, ResourceIgnoreDifferences,
          and ResourceActions.'
        displayName: Resource Customizations'
        path: resourceCustomizations
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:text
        - urn:alm:descriptor:com.tectonic.ui:advanced
      - description: ResourceExclusions is used to completely ignore entire classes
          of resource group/kinds.
        displayName: Resource Exclusions'
        path: resourceExclusions
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:text
        - urn:alm:descriptor:com.tectonic.ui:advanced
      - description: ResourceHealthChecks customizes resource health check behavior.
        displayName: Resource Health Check Customizations'
        path: resourceHealthChecks
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:text
        - urn:alm:descriptor:com.tectonic.ui:advanced
      - description: ResourceIgnoreDifferences customizes resource ignore difference
          behavior.
        displayName: Resource Ignore Difference Customizations'
        path: resourceIgnoreDifferences
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:text
        - urn:alm:descriptor:com.tectonic.ui:advanced
      - description: ResourceTrackingMethod defines how Argo CD should track resources
          that it manages
        displayName: Resource Tracking Method'
        path: resourceTrackingMethod
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:text
        - urn:alm:descriptor:com.tectonic.ui:advanced
      - description: Enabled will toggle autoscaling support for the Argo CD Server
          component.
        displayName: Autoscale Enabled'
        path: server.autoscale.enabled
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:Server
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
      - description: Host is the hostname to use for Ingress/Route resources.
        displayName: GRPC Host
        path: server.grpc.host
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:Server
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: Ingress defines the desired state for the Argo CD Server GRPC
          Ingress.
        displayName: GRPC Ingress Enabled'
        path: server.grpc.ingress
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:Server
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
      - description: Enabled will toggle the creation of the Ingress.
        displayName: Ingress Enabled'
        path: server.grpc.ingress.enabled
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:Grafana
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:Prometheus
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:Server
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
      - description: Host is the hostname to use for Ingress/Route resources.
        displayName: Host
        path: server.host
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:Server
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: Enabled will toggle the creation of the Ingress.
        displayName: Ingress Enabled'
        path: server.ingress.enabled
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:Grafana
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:Prometheus
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:Server
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
      - description: Insecure toggles the insecure flag.
        displayName: Insecure
        path: server.insecure
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:Server
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
      - description: Resources defines the Compute Resources required by the container
          for the Argo CD server component.
        displayName: Resource Requirements'
        path: server.resources
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:Server
        - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
      - description: Enabled will toggle the creation of the OpenShift Route.
        displayName: Route Enabled'
        path: server.route.enabled
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:Grafana
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:Prometheus
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:Server
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
      - description: Type is the ServiceType to use for the Service resource.
        displayName: Service Type'
        path: server.service.type
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:Server
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: Config is the dex connector configuration.
        displayName: Configuration
        path: sso.dex.config
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:Dex
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: Image is the Dex container image.
        displayName: Image
        path: sso.dex.image
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:Dex
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: OpenShiftOAuth enables OpenShift OAuth authentication for the
          Dex server.
        displayName: OpenShift OAuth Enabled'
        path: sso.dex.openShiftOAuth
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:Dex
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
      - description: Resources defines the Compute Resources required by the container
          for Dex.
        displayName: Resource Requirements'
        path: sso.dex.resources
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:Dex
        - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
      - description: Version is the Dex container image tag.
        displayName: Version
        path: sso.dex.version
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:Dex
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: StatusBadgeEnabled toggles application status badge feature.
        displayName: Status Badge Enabled'
        path: statusBadgeEnabled
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
        - urn:alm:descriptor:com.tectonic.ui:advanced
      - description: UsersAnonymousEnabled toggles anonymous user access. The anonymous
          users get default role permissions specified argocd-rbac-cm.
        displayName: Anonymous Users Enabled'
        path: usersAnonymousEnabled
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
        - urn:alm:descriptor:com.tectonic.ui:advanced
      - description: Version is the tag to use with the ArgoCD container image for
          all ArgoCD components.
        displayName: Version
        path: version
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:ArgoCD
        - urn:alm:descriptor:com.tectonic.ui:text
      statusDescriptors:
      - description: 'ApplicationController is a simple, high-level summary of where
          the Argo CD application controller component is in its lifecycle. There
          are four possible ApplicationController values: Pending: The Argo CD application
          controller component has been accepted by the Kubernetes system, but one
          or more of the required resources have not been created. Running: All of
          the required Pods for the Argo CD application controller component are in
          a Ready state. Failed: At least one of the  Argo CD application controller
          component Pods had a failure. Unknown: The state of the Argo CD application
          controller component could not be obtained.'
        displayName: ApplicationController
        path: applicationController
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: 'ApplicationSetController is a simple, high-level summary of
          where the Argo CD applicationSet controller component is in its lifecycle.
          There are four possible ApplicationSetController values: Pending: The Argo
          CD applicationSet controller component has been accepted by the Kubernetes
          system, but one or more of the required resources have not been created.
          Running: All of the required Pods for the Argo CD applicationSet controller
          component are in a Ready state. Failed: At least one of the  Argo CD applicationSet
          controller component Pods had a failure. Unknown: The state of the Argo
          CD applicationSet controller component could not be obtained.'
        displayName: ApplicationSetController
        path: applicationSetController
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: 'NotificationsController is a simple, high-level summary of where
          the Argo CD notifications controller component is in its lifecycle. There
          are four possible NotificationsController values: Pending: The Argo CD notifications
          controller component has been accepted by the Kubernetes system, but one
          or more of the required resources have not been created. Running: All of
          the required Pods for the Argo CD notifications controller component are
          in a Ready state. Failed: At least one of the  Argo CD notifications controller
          component Pods had a failure. Unknown: The state of the Argo CD notifications
          controller component could not be obtained.'
        displayName: NotificationsController
        path: notificationsController
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: 'Phase is a simple, high-level summary of where the ArgoCD is
          in its lifecycle. There are four possible phase values: Pending: The ArgoCD
          has been accepted by the Kubernetes system, but one or more of the required
          resources have not been created. Available: All of the resources for the
          ArgoCD are ready. Failed: At least one resource has experienced a failure.
          Unknown: The state of the ArgoCD phase could not be obtained.'
        displayName: Phase
        path: phase
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: 'Redis is a simple, high-level summary of where the Argo CD Redis
          component is in its lifecycle. There are four possible redis values: Pending:
          The Argo CD Redis component has been accepted by the Kubernetes system,
          but one or more of the required resources have not been created. Running:
          All of the required Pods for the Argo CD Redis component are in a Ready
          state. Failed: At least one of the  Argo CD Redis component Pods had a failure.
          Unknown: The state of the Argo CD Redis component could not be obtained.'
        displayName: Redis
        path: redis
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: 'Repo is a simple, high-level summary of where the Argo CD Repo
          component is in its lifecycle. There are four possible repo values: Pending:
          The Argo CD Repo component has been accepted by the Kubernetes system, but
          one or more of the required resources have not been created. Running: All
          of the required Pods for the Argo CD Repo component are in a Ready state.
          Failed: At least one of the  Argo CD Repo component Pods had a failure.
          Unknown: The state of the Argo CD Repo component could not be obtained.'
        displayName: Repo
        path: repo
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: 'Server is a simple, high-level summary of where the Argo CD
          server component is in its lifecycle. There are four possible server values:
          Pending: The Argo CD server component has been accepted by the Kubernetes
          system, but one or more of the required resources have not been created.
          Running: All of the required Pods for the Argo CD server component are in
          a Ready state. Failed: At least one of the  Argo CD server component Pods
          had a failure. Unknown: The state of the Argo CD server component could
          not be obtained.'
        displayName: Server
        path: server
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: 'SSO is a simple, high-level summary of where the Argo CD SSO(Dex/Keycloak)
          component is in its lifecycle. There are four possible sso values: Pending:
          The Argo CD SSO component has been accepted by the Kubernetes system, but
          one or more of the required resources have not been created. Running: All
          of the required Pods for the Argo CD SSO component are in a Ready state.
          Failed: At least one of the  Argo CD SSO component Pods had a failure. Unknown:
          The state of the Argo CD SSO component could not be obtained.'
        displayName: SSO
        path: sso
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:text
      version: v1alpha1
    - description: ArgoCD is the Schema for the argocds API
      displayName: Argo CD
      kind: ArgoCD
      name: argocds.argoproj.io
      resources:
      - kind: ArgoCD
        name: ""
        version: v1beta1
      - kind: ArgoCDExport
        name: ""
        version: v1alpha1
      - kind: ConfigMap
        name: ""
        version: v1
      - kind: CronJob
        name: ""
        version: v1
      - kind: Deployment
        name: ""
        version: v1
      - kind: Ingress
        name: ""
        version: v1
      - kind: Job
        name: ""
        version: v1
      - kind: PersistentVolumeClaim
        name: ""
        version: v1
      - kind: Pod
        name: ""
        version: v1
      - kind: Prometheus
        name: ""
        version: v1
      - kind: ReplicaSet
        name: ""
        version: v1
      - kind: Route
        name: ""
        version: v1
      - kind: Secret
        name: ""
        version: v1
      - kind: Service
        name: ""
        version: v1
      - kind: ServiceMonitor
        name: ""
        version: v1
      - kind: StatefulSet
        name: ""
        version: v1
      specDescriptors:
      - description: ApplicationInstanceLabelKey is the key name where Argo CD injects
          the app name as a tracking label.
        displayName: Application Instance Label Key'
        path: applicationInstanceLabelKey
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:text
        - urn:alm:descriptor:com.tectonic.ui:advanced
      - description: Host is the hostname to use for Ingress/Route resources.
        displayName: Host
        path: applicationSet.webhookServer.host
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:Server
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: Enabled will toggle the creation of the Ingress.
        displayName: Ingress Enabled'
        path: applicationSet.webhookServer.ingress.enabled
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:Grafana
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:Prometheus
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:Server
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
      - description: Enabled will toggle the creation of the OpenShift Route.
        displayName: Route Enabled'
        path: applicationSet.webhookServer.route.enabled
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:Grafana
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:Prometheus
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:Server
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
      - description: ConfigManagementPlugins is used to specify additional config
          management plugins.
        displayName: Config Management Plugins'
        path: configManagementPlugins
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:text
        - urn:alm:descriptor:com.tectonic.ui:advanced
      - description: Operation is the number of application operation processors.
        displayName: Operation Processor Count'
        path: controller.processors.operation
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:Controller
        - urn:alm:descriptor:com.tectonic.ui:number
      - description: Status is the number of application status processors.
        displayName: Status Processor Count'
        path: controller.processors.status
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:Controller
        - urn:alm:descriptor:com.tectonic.ui:number
      - description: Resources defines the Compute Resources required by the container
          for the Application Controller.
        displayName: Resource Requirements'
        path: controller.resources
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:Controller
        - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
      - description: GAAnonymizeUsers toggles user IDs being hashed before sending
          to google analytics.
        displayName: Google Analytics Anonymize Users'
        path: gaAnonymizeUsers
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
        - urn:alm:descriptor:com.tectonic.ui:advanced
      - description: GATrackingID is the google analytics tracking ID to use.
        displayName: Google Analytics Tracking ID'
        path: gaTrackingID
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:text
        - urn:alm:descriptor:com.tectonic.ui:advanced
      - description: Enabled will toggle Grafana support globally for ArgoCD.
        displayName: Enabled
        path: grafana.enabled
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:Grafana
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
      - description: Host is the hostname to use for Ingress/Route resources.
        displayName: Host
        path: grafana.host
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:Grafana
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: Image is the Grafana container image.
        displayName: Image
        path: grafana.image
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:Grafana
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: Enabled will toggle the creation of the Ingress.
        displayName: Ingress Enabled'
        path: grafana.ingress.enabled
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:Grafana
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:Prometheus
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:Server
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
      - description: Resources defines the Compute Resources required by the container
          for Grafana.
        displayName: Resource Requirements'
        path: grafana.resources
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:Grafana
        - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
      - description: Enabled will toggle the creation of the OpenShift Route.
        displayName: Route Enabled'
        path: grafana.route.enabled
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:Grafana
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:Prometheus
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:Server
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
      - description: Size is the replica count for the Grafana Deployment.
        displayName: Size
        path: grafana.size
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:Grafana
        - urn:alm:descriptor:com.tectonic.ui:podCount
      - description: Version is the Grafana container image tag.
        displayName: Version
        path: grafana.version
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:Grafana
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: Enabled will toggle HA support globally for Argo CD.
        displayName: Enabled
        path: ha.enabled
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:HA
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
      - description: HelpChatText is the text for getting chat help, defaults to "Chat
          now!"
        displayName: Help Chat Text'
        path: helpChatText
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:text
        - urn:alm:descriptor:com.tectonic.ui:advanced
      - description: HelpChatURL is the URL for getting chat help, this will typically
          be your Slack channel for support.
        displayName: Help Chat URL'
        path: helpChatURL
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:text
        - urn:alm:descriptor:com.tectonic.ui:advanced
      - description: Image is the ArgoCD container image for all ArgoCD components.
        displayName: Image
        path: image
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:ArgoCD
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: Name of an ArgoCDExport from which to import data.
        displayName: Name
        path: import.name
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:Import
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: Namespace for the ArgoCDExport, defaults to the same namespace
          as the ArgoCD.
        displayName: Namespace
        path: import.namespace
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:Import
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: InitialRepositories to configure Argo CD with upon creation of
          the cluster.
        displayName: Initial Repositories'
        path: initialRepositories
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:text
        - urn:alm:descriptor:com.tectonic.ui:advanced
      - description: KustomizeVersions is a listing of configured versions of Kustomize
          to be made available within ArgoCD.
        displayName: Kustomize Build Options'
        path: kustomizeVersions
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:text
        - urn:alm:descriptor:com.tectonic.ui:advanced
      - description: OIDCConfig is the OIDC configuration as an alternative to dex.
        displayName: OIDC Config'
        path: oidcConfig
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:text
        - urn:alm:descriptor:com.tectonic.ui:advanced
      - description: Enabled will toggle Prometheus support globally for ArgoCD.
        displayName: Enabled
        path: prometheus.enabled
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:Prometheus
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
      - description: Host is the hostname to use for Ingress/Route resources.
        displayName: Host
        path: prometheus.host
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:Prometheus
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: Enabled will toggle the creation of the Ingress.
        displayName: Ingress Enabled'
        path: prometheus.ingress.enabled
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:Grafana
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:Prometheus
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:Server
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
      - description: Enabled will toggle the creation of the OpenShift Route.
        displayName: Route Enabled'
        path: prometheus.route.enabled
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:Grafana
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:Prometheus
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:Server
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
      - description: Size is the replica count for the Prometheus StatefulSet.
        displayName: Size
        path: prometheus.size
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:Prometheus
        - urn:alm:descriptor:com.tectonic.ui:podCount
      - description: DefaultPolicy is the name of the default role which Argo CD will
          falls back to, when authorizing API requests (optional). If omitted or empty,
          users may be still be able to login, but will see no apps, projects, etc...
        displayName: Default Policy'
        path: rbac.defaultPolicy
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:RBAC
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: 'Policy is CSV containing user-defined RBAC policies and role
          definitions. Policy rules are in the form: p, subject, resource, action,
          object, effect Role definitions and bindings are in the form: g, subject,
          inherited-subject See https://github.com/argoproj/argo-cd/blob/master/docs/operator-manual/rbac.md
          for additional information.'
        displayName: Policy
        path: rbac.policy
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:RBAC
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: 'Scopes controls which OIDC scopes to examine during rbac enforcement
          (in addition to `sub` scope). If omitted, defaults to: ''[groups]''.'
        displayName: Scopes
        path: rbac.scopes
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:RBAC
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: Image is the Redis container image.
        displayName: Image
        path: redis.image
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:Redis
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: Resources defines the Compute Resources required by the container
          for Redis.
        displayName: Resource Requirements'
        path: redis.resources
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:Redis
        - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
      - description: Version is the Redis container image tag.
        displayName: Version
        path: redis.version
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:Redis
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: Resources defines the Compute Resources required by the container
          for Redis.
        displayName: Resource Requirements'
        path: repo.resources
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:Repo
        - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
      - description: ResourceActions customizes resource action behavior.
        displayName: Resource Action Customizations'
        path: resourceActions
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:text
        - urn:alm:descriptor:com.tectonic.ui:advanced
      - description: ResourceExclusions is used to completely ignore entire classes
          of resource group/kinds.
        displayName: Resource Exclusions'
        path: resourceExclusions
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:text
        - urn:alm:descriptor:com.tectonic.ui:advanced
      - description: ResourceHealthChecks customizes resource health check behavior.
        displayName: Resource Health Check Customizations'
        path: resourceHealthChecks
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:text
        - urn:alm:descriptor:com.tectonic.ui:advanced
      - description: ResourceIgnoreDifferences customizes resource ignore difference
          behavior.
        displayName: Resource Ignore Difference Customizations'
        path: resourceIgnoreDifferences
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:text
        - urn:alm:descriptor:com.tectonic.ui:advanced
      - description: ResourceTrackingMethod defines how Argo CD should track resources
          that it manages
        displayName: Resource Tracking Method'
        path: resourceTrackingMethod
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:text
        - urn:alm:descriptor:com.tectonic.ui:advanced
      - description: Enabled will toggle autoscaling support for the Argo CD Server
          component.
        displayName: Autoscale Enabled'
        path: server.autoscale.enabled
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:Server
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
      - description: Host is the hostname to use for Ingress/Route resources.
        displayName: GRPC Host
        path: server.grpc.host
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:Server
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: Ingress defines the desired state for the Argo CD Server GRPC
          Ingress.
        displayName: GRPC Ingress Enabled'
        path: server.grpc.ingress
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:Server
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
      - description: Enabled will toggle the creation of the Ingress.
        displayName: Ingress Enabled'
        path: server.grpc.ingress.enabled
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:Grafana
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:Prometheus
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:Server
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
      - description: Host is the hostname to use for Ingress/Route resources.
        displayName: Host
        path: server.host
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:Server
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: Enabled will toggle the creation of the Ingress.
        displayName: Ingress Enabled'
        path: server.ingress.enabled
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:Grafana
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:Prometheus
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:Server
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
      - description: Insecure toggles the insecure flag.
        displayName: Insecure
        path: server.insecure
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:Server
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
      - description: Resources defines the Compute Resources required by the container
          for the Argo CD server component.
        displayName: Resource Requirements'
        path: server.resources
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:Server
        - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
      - description: Enabled will toggle the creation of the OpenShift Route.
        displayName: Route Enabled'
        path: server.route.enabled
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:Grafana
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:Prometheus
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:Server
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
      - description: Type is the ServiceType to use for the Service resource.
        displayName: Service Type'
        path: server.service.type
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:Server
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: Config is the dex connector configuration.
        displayName: Configuration
        path: sso.dex.config
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:Dex
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: Image is the Dex container image.
        displayName: Image
        path: sso.dex.image
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:Dex
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: OpenShiftOAuth enables OpenShift OAuth authentication for the
          Dex server.
        displayName: OpenShift OAuth Enabled'
        path: sso.dex.openShiftOAuth
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:Dex
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
      - description: Resources defines the Compute Resources required by the container
          for Dex.
        displayName: Resource Requirements'
        path: sso.dex.resources
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:Dex
        - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
      - description: Version is the Dex container image tag.
        displayName: Version
        path: sso.dex.version
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:Dex
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: StatusBadgeEnabled toggles application status badge feature.
        displayName: Status Badge Enabled'
        path: statusBadgeEnabled
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
        - urn:alm:descriptor:com.tectonic.ui:advanced
      - description: UsersAnonymousEnabled toggles anonymous user access. The anonymous
          users get default role permissions specified argocd-rbac-cm.
        displayName: Anonymous Users Enabled'
        path: usersAnonymousEnabled
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
        - urn:alm:descriptor:com.tectonic.ui:advanced
      - description: Version is the tag to use with the ArgoCD container image for
          all ArgoCD components.
        displayName: Version
        path: version
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:ArgoCD
        - urn:alm:descriptor:com.tectonic.ui:text
      statusDescriptors:
      - description: 'ApplicationController is a simple, high-level summary of where
          the Argo CD application controller component is in its lifecycle. There
          are four possible ApplicationController values: Pending: The Argo CD application
          controller component has been accepted by the Kubernetes system, but one
          or more of the required resources have not been created. Running: All of
          the required Pods for the Argo CD application controller component are in
          a Ready state. Failed: At least one of the  Argo CD application controller
          component Pods had a failure. Unknown: The state of the Argo CD application
          controller component could not be obtained.'
        displayName: ApplicationController
        path: applicationController
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: 'ApplicationSetController is a simple, high-level summary of
          where the Argo CD applicationSet controller component is in its lifecycle.
          There are four possible ApplicationSetController values: Pending: The Argo
          CD applicationSet controller component has been accepted by the Kubernetes
          system, but one or more of the required resources have not been created.
          Running: All of the required Pods for the Argo CD applicationSet controller
          component are in a Ready state. Failed: At least one of the  Argo CD applicationSet
          controller component Pods had a failure. Unknown: The state of the Argo
          CD applicationSet controller component could not be obtained.'
        displayName: ApplicationSetController
        path: applicationSetController
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: 'NotificationsController is a simple, high-level summary of where
          the Argo CD notifications controller component is in its lifecycle. There
          are four possible NotificationsController values: Pending: The Argo CD notifications
          controller component has been accepted by the Kubernetes system, but one
          or more of the required resources have not been created. Running: All of
          the required Pods for the Argo CD notifications controller component are
          in a Ready state. Failed: At least one of the  Argo CD notifications controller
          component Pods had a failure. Unknown: The state of the Argo CD notifications
          controller component could not be obtained.'
        displayName: NotificationsController
        path: notificationsController
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: 'Phase is a simple, high-level summary of where the ArgoCD is
          in its lifecycle. There are four possible phase values: Pending: The ArgoCD
          has been accepted by the Kubernetes system, but one or more of the required
          resources have not been created. Available: All of the resources for the
          ArgoCD are ready. Failed: At least one resource has experienced a failure.
          Unknown: The state of the ArgoCD phase could not be obtained.'
        displayName: Phase
        path: phase
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: 'Redis is a simple, high-level summary of where the Argo CD Redis
          component is in its lifecycle. There are four possible redis values: Pending:
          The Argo CD Redis component has been accepted by the Kubernetes system,
          but one or more of the required resources have not been created. Running:
          All of the required Pods for the Argo CD Redis component are in a Ready
          state. Failed: At least one of the  Argo CD Redis component Pods had a failure.
          Unknown: The state of the Argo CD Redis component could not be obtained.'
        displayName: Redis
        path: redis
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: 'Repo is a simple, high-level summary of where the Argo CD Repo
          component is in its lifecycle. There are four possible repo values: Pending:
          The Argo CD Repo component has been accepted by the Kubernetes system, but
          one or more of the required resources have not been created. Running: All
          of the required Pods for the Argo CD Repo component are in a Ready state.
          Failed: At least one of the  Argo CD Repo component Pods had a failure.
          Unknown: The state of the Argo CD Repo component could not be obtained.'
        displayName: Repo
        path: repo
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: 'Server is a simple, high-level summary of where the Argo CD
          server component is in its lifecycle. There are four possible server values:
          Pending: The Argo CD server component has been accepted by the Kubernetes
          system, but one or more of the required resources have not been created.
          Running: All of the required Pods for the Argo CD server component are in
          a Ready state. Failed: At least one of the  Argo CD server component Pods
          had a failure. Unknown: The state of the Argo CD server component could
          not be obtained.'
        displayName: Server
        path: server
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: 'SSO is a simple, high-level summary of where the Argo CD SSO(Dex/Keycloak)
          component is in its lifecycle. There are four possible sso values: Pending:
          The Argo CD SSO component has been accepted by the Kubernetes system, but
          one or more of the required resources have not been created. Running: All
          of the required Pods for the Argo CD SSO component are in a Ready state.
          Failed: At least one of the  Argo CD SSO component Pods had a failure. Unknown:
          The state of the Argo CD SSO component could not be obtained.'
        displayName: SSO
        path: sso
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:text
      version: v1beta1
    - description: NotificationsConfiguration is the Schema for the notificationsconfiguration
        API
      displayName: NotificationsConfiguration
      kind: NotificationsConfiguration
      name: notificationsconfigurations.argoproj.io
      resources:
      - kind: ArgoCD
        name: ""
        version: v1alpha1
      - kind: ArgoCDExport
        name: ""
        version: v1alpha1
      - kind: NotificationsConfiguration
        name: ""
        version: v1alpha1
      - kind: ConfigMap
        name: ""
        version: v1
      - kind: CronJob
        name: ""
        version: v1
      - kind: Deployment
        name: ""
        version: v1
      - kind: Ingress
        name: ""
        version: v1
      - kind: Job
        name: ""
        version: v1
      - kind: PersistentVolumeClaim
        name: ""
        version: v1
      - kind: Pod
        name: ""
        version: v1
      - kind: Prometheus
        name: ""
        version: v1
      - kind: ReplicaSet
        name: ""
        version: v1
      - kind: Route
        name: ""
        version: v1
      - kind: Secret
        name: ""
        version: v1
      - kind: Service
        name: ""
        version: v1
      - kind: ServiceMonitor
        name: ""
        version: v1
      - kind: StatefulSet
        name: ""
        version: v1
      specDescriptors:
      - description: Argocd is the name of the ArgoCD instance to export.
        displayName: ArgoCD
        path: argocd
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: Schedule in Cron format, see https://en.wikipedia.org/wiki/Cron.
        displayName: Schedule
        path: schedule
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: Storage defines the storage configuration options.
        displayName: Storage
        path: storage
      statusDescriptors:
      - description: 'Phase is a simple, high-level summary of where the ArgoCDExport
          is in its lifecycle. There are five possible phase values: Pending: The
          ArgoCDExport has been accepted by the Kubernetes system, but one or more
          of the required resources have not been created. Running: All of the containers
          for the ArgoCDExport are still running, or in the process of starting or
          restarting. Succeeded: All containers for the ArgoCDExport have terminated
          in success, and will not be restarted. Failed: At least one container has
          terminated in failure, either exited with non-zero status or was terminated
          by the system. Unknown: For some reason the state of the ArgoCDExport could
          not be obtained.'
        displayName: Phase
        path: phase
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:text
      version: v1alpha1
  description: |
    ## Overview

    The Argo CD Operator manages the full lifecycle for [Argo CD](https://argoproj.github.io/argo-cd/) and it's
    components. The operator's goal is to automate the tasks required when operating an Argo CD cluster.

    Beyond installation, the operator helps to automate the process of upgrading, backing up and restoring as needed and
    remove the human as much as possible. In addition, the operator aims to provide deep insights into the Argo CD
    environment by configuring Prometheus and Grafana to aggregate, visualize and expose the metrics already exported by
    Argo CD.

    The operator aims to provide the following, and is a work in progress.

    * Easy configuration and installation of the Argo CD components with sane defaults to get up and running quickly.
    * Provide seamless upgrades to the Argo CD components.
    * Ability to back up and restore an Argo CD cluster from a point in time or on a recurring schedule.
    * Aggregate and expose the metrics for Argo CD and the operator itself using Prometheus and Grafana.
    * Autoscale the Argo CD components as necessary to handle variability in demand.

    ## Usage

    Deploy a basic Argo CD cluster by creating a new ArgoCD resource in the namespace where the operator is installed.

    ```
    apiVersion: argoproj.io/v1alpha1
    kind: ArgoCD
    metadata:
      name: example-argocd
    spec: {}
    ```

    ## Backup

    Backup the cluster above by creating a new ArgoCDExport resource in the namespace where the operator is installed.

    ```
    apiVersion: argoproj.io/v1alpha1
    kind: ArgoCDExport
    metadata:
      name: example-argocdexport
    spec:
      argocd: example-argocd
    ```

    See the [documentation](https://argocd-operator.readthedocs.io) and examples on
    [GitHub](https://github.com/argoproj-labs/argocd-operator) for more information.
  displayName: Argo CD
  icon:
  - base64data: PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiIHN0YW5kYWxvbmU9Im5vIj8+CjwhRE9DVFlQRSBzdmcgUFVCTElDICItLy9XM0MvL0RURCBTVkcgMS4xLy9FTiIgImh0dHA6Ly93d3cudzMub3JnL0dyYXBoaWNzL1NWRy8xLjEvRFREL3N2ZzExLmR0ZCI+Cjxzdmcgd2lkdGg9IjEwMCUiIGhlaWdodD0iMTAwJSIgdmlld0JveD0iMCAwIDIzIDMwIiB2ZXJzaW9uPSIxLjEiIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIgeG1sbnM6eGxpbms9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkveGxpbmsiIHhtbDpzcGFjZT0icHJlc2VydmUiIHhtbG5zOnNlcmlmPSJodHRwOi8vd3d3LnNlcmlmLmNvbS8iIHN0eWxlPSJmaWxsLXJ1bGU6ZXZlbm9kZDtjbGlwLXJ1bGU6ZXZlbm9kZDtzdHJva2UtbGluZWpvaW46cm91bmQ7c3Ryb2tlLW1pdGVybGltaXQ6MjsiPgogICAgPGcgdHJhbnNmb3JtPSJtYXRyaXgoMSwwLDAsMSwtOS4yLC03KSI+CiAgICAgICAgPGc+CiAgICAgICAgICAgIDxnPgogICAgICAgICAgICAgICAgPHBhdGggZD0iTTE2LDI3LjdDMTYsMjcuNyAxNS44LDI4LjMgMTUuNSwyOC42QzE1LjMsMjguOCAxNS4xLDI4LjkgMTQuOCwyOC45QzE0LjEsMjkuMSAxMy4zLDI5LjIgMTMuMywyOS4yQzEzLjMsMjkuMiAxNCwyOS4zIDE0LjgsMjkuNEMxNS4xLDI5LjQgMTUuMSwyOS40IDE1LjMsMjkuNUMxNS44LDI5LjUgMTYsMjkuMiAxNiwyOS4yTDE2LDI3LjdaIiBzdHlsZT0iZmlsbDpyZ2IoMjMzLDEwMSw3NSk7ZmlsbC1ydWxlOm5vbnplcm87Ii8+CiAgICAgICAgICAgICAgICA8cGF0aCBkPSJNMjUuMiwyNy43QzI1LjIsMjcuNyAyNS40LDI4LjMgMjUuNywyOC42QzI1LjksMjguOCAyNi4xLDI4LjkgMjYuNCwyOC45QzI3LjEsMjkuMSAyNy45LDI5LjIgMjcuOSwyOS4yQzI3LjksMjkuMiAyNy4yLDI5LjMgMjYuMywyOS40QzI2LDI5LjQgMjYsMjkuNCAyNS44LDI5LjVDMjUuMiwyOS41IDI1LjEsMjkuMiAyNS4xLDI5LjJMMjUuMiwyNy43WiIgc3R5bGU9ImZpbGw6cmdiKDIzMywxMDEsNzUpO2ZpbGwtcnVsZTpub256ZXJvOyIvPgogICAgICAgICAgICA8L2c+CiAgICAgICAgICAgIDxnPgogICAgICAgICAgICAgICAgPGNpcmNsZSBjeD0iMjAuNyIgY3k9IjE3LjgiIHI9IjEwLjgiIHN0eWxlPSJmaWxsOnJnYigxODIsMjA3LDIzNCk7Ii8+CiAgICAgICAgICAgICAgICA8Y2lyY2xlIGN4PSIyMC43IiBjeT0iMTcuOCIgcj0iMTAuNCIgc3R5bGU9ImZpbGw6cmdiKDIzMCwyNDUsMjQ4KTsiLz4KICAgICAgICAgICAgICAgIDxjaXJjbGUgY3g9IjIwLjciIGN5PSIxOCIgcj0iOC41IiBzdHlsZT0iZmlsbDpyZ2IoMjA4LDIzMiwyNDApOyIvPgogICAgICAgICAgICAgICAgPGcgaWQ9IkJvZHlfMV8iPgogICAgICAgICAgICAgICAgICAgIDxwYXRoIGQ9Ik0xNS43LDIyQzE1LjcsMjIgMTYuNCwzMy4zIDE2LjQsMzMuNUMxNi40LDMzLjYgMTYuNSwzMy44IDE2LDM0QzE1LjUsMzQuMiAxMy45LDM0LjYgMTMuOSwzNC42TDE2LjMsMzQuNkMxNy40LDM0LjYgMTcuNCwzMy43IDE3LjQsMzMuNUMxNy40LDMzLjMgMTcuNywyOSAxNy43LDI5QzE3LjcsMjkgMTcuOCwzNC4xIDE3LjgsMzQuM0MxNy44LDM0LjUgMTcuNywzNC44IDE3LDM1QzE2LjUsMzUuMSAxNSwzNS40IDE1LDM1LjRMMTcuMywzNS40QzE4LjcsMzUuNCAxOC43LDM0LjUgMTguNywzNC41TDE5LDMwQzE5LDMwIDE5LjEsMzQuNSAxOS4xLDM1QzE5LjEsMzUuNCAxOC44LDM1LjcgMTcuNywzNS45QzE3LDM2LjEgMTYuMSwzNi4zIDE2LjEsMzYuM0wxOC43LDM2LjNDMjAsMzYuMiAyMC4yLDM1LjMgMjAuMiwzNS4zTDIyLjQsMjQuMUwxNS43LDIyWiIgc3R5bGU9ImZpbGw6cmdiKDIzOCwxMjEsNzUpO2ZpbGwtcnVsZTpub256ZXJvOyIvPgogICAgICAgICAgICAgICAgICAgIDxwYXRoIGQ9Ik0yNS43LDIyQzI1LjcsMjIgMjUsMzMuMyAyNSwzMy41QzI1LDMzLjYgMjQuOSwzMy44IDI1LjQsMzRDMjUuOSwzNC4yIDI3LjUsMzQuNiAyNy41LDM0LjZMMjUuMSwzNC42QzI0LDM0LjYgMjQsMzMuNyAyNCwzMy41QzI0LDMzLjMgMjMuNywyOSAyMy43LDI5QzIzLjcsMjkgMjMuNiwzNC4xIDIzLjYsMzQuM0MyMy42LDM0LjUgMjMuNywzNC44IDI0LjQsMzVDMjQuOSwzNS4xIDI2LjQsMzUuNCAyNi40LDM1LjRMMjQuMSwzNS40QzIyLjcsMzUuNCAyMi43LDM0LjUgMjIuNywzNC41TDIyLjQsMzBDMjIuNCwzMCAyMi4zLDM0LjUgMjIuMywzNUMyMi4zLDM1LjQgMjIuNiwzNS43IDIzLjcsMzUuOUMyNC40LDM2LjEgMjUuMywzNi4zIDI1LjMsMzYuM0wyMi43LDM2LjNDMjEuNCwzNi4yIDIxLjIsMzUuMyAyMS4yLDM1LjNMMTksMjQuMUwyNS43LDIyWiIgc3R5bGU9ImZpbGw6cmdiKDIzOCwxMjEsNzUpO2ZpbGwtcnVsZTpub256ZXJvOyIvPgogICAgICAgICAgICAgICAgICAgIDxwYXRoIGQ9Ik0yNS44LDE2LjVDMjUuOCwxOS4zIDIzLjUsMjEuNSAyMC44LDIxLjVDMTguMSwyMS41IDE1LjgsMTkuMiAxNS44LDE2LjVDMTUuOCwxMy44IDE4LjEsMTEuNSAyMC44LDExLjVDMjMuNSwxMS41IDI1LjgsMTMuNyAyNS44LDE2LjVaIiBzdHlsZT0iZmlsbDpyZ2IoMjM4LDEyMSw3NSk7ZmlsbC1ydWxlOm5vbnplcm87Ii8+CiAgICAgICAgICAgICAgICAgICAgPGNsaXBQYXRoIGlkPSJfY2xpcDEiPgogICAgICAgICAgICAgICAgICAgICAgICA8cGF0aCBkPSJNMjUuOCwxNi4zTDI1LjIsMzBMMTYuMiwzMEwxNS43LDE2LjMiLz4KICAgICAgICAgICAgICAgICAgICA8L2NsaXBQYXRoPgogICAgICAgICAgICAgICAgICAgIDxnIGNsaXAtcGF0aD0idXJsKCNfY2xpcDEpIj4KICAgICAgICAgICAgICAgICAgICAgICAgPGNpcmNsZSBjeD0iMjAuOCIgY3k9IjE5LjIiIHI9IjguOSIgc3R5bGU9ImZpbGw6cmdiKDIzOCwxMjEsNzUpOyIvPgogICAgICAgICAgICAgICAgICAgIDwvZz4KICAgICAgICAgICAgICAgICAgICA8cGF0aCBkPSJNMjUuNSwyMkMyNS41LDIyIDI2LjEsMTYuNyAyNS4zLDE0LjdDMjMuOCwxMS4yIDIwLjMsMTEuNSAyMC4zLDExLjVDMjAuMywxMS41IDIyLjMsMTIuMyAyMi40LDE1LjNDMjIuNSwxNy40IDIyLjQsMjAuNSAyMi40LDIwLjVMMjUuNSwyMloiIHN0eWxlPSJmaWxsOnJnYigyMjcsNzgsNTkpO2ZpbGwtb3BhY2l0eTowLjIyO2ZpbGwtcnVsZTpub256ZXJvOyIvPgogICAgICAgICAgICAgICAgPC9nPgogICAgICAgICAgICAgICAgPGcgaWQ9IkZhY2VfMV8iPgogICAgICAgICAgICAgICAgICAgIDxjaXJjbGUgY3g9IjE4LjciIGN5PSIxMy44IiByPSIwLjciIHN0eWxlPSJmaWxsOnJnYigyNTEsMjIzLDE5NSk7ZmlsbC1vcGFjaXR5OjAuNTsiLz4KICAgICAgICAgICAgICAgICAgICA8Zz4KICAgICAgICAgICAgICAgICAgICAgICAgPGc+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cGF0aCBkPSJNMjIuNSwyNEMyMi41LDI1LjcgMjEuNywyNi44IDIwLjcsMjYuOEMxOS43LDI2LjggMTguOSwyNS41IDE4LjksMjMuOEMxOC45LDIzLjggMTkuNywyNS40IDIwLjgsMjUuNEMyMS45LDI1LjQgMjIuNSwyNCAyMi41LDI0WiIgc3R5bGU9ImZpbGw6cmdiKDEsMSwxKTtmaWxsLXJ1bGU6bm9uemVybzsiLz4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwYXRoIGQ9Ik0yMi41LDI0QzIyLjUsMjUuMSAyMS43LDI1LjcgMjAuNywyNS43QzE5LjcsMjUuNyAxOSwyNC45IDE5LDIzLjlDMTksMjMuOSAxOS44LDI0LjkgMjAuOSwyNC45QzIyLDI0LjkgMjIuNSwyNCAyMi41LDI0WiIgc3R5bGU9ImZpbGw6d2hpdGU7ZmlsbC1ydWxlOm5vbnplcm87Ii8+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvZz4KICAgICAgICAgICAgICAgICAgICAgICAgPGc+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8Zz4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8Zz4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGNpcmNsZSBjeD0iMjQuMiIgY3k9IjE5LjMiIHI9IjMuMSIgc3R5bGU9ImZpbGw6cmdiKDIzMywxMDEsNzUpOyIvPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8Y2lyY2xlIGN4PSIxNy4yIiBjeT0iMTkuMyIgcj0iMy4xIiBzdHlsZT0iZmlsbDpyZ2IoMjMzLDEwMSw3NSk7Ii8+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9nPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxnPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8Y2lyY2xlIGN4PSIyNC4yIiBjeT0iMTkuMyIgcj0iMi40IiBzdHlsZT0iZmlsbDp3aGl0ZTsiLz4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGNpcmNsZSBjeD0iMTciIGN5PSIxOS4zIiByPSIyLjQiIHN0eWxlPSJmaWxsOndoaXRlOyIvPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZz4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZz4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxnPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxjaXJjbGUgY3g9IjE3IiBjeT0iMTkiIHI9IjAuNyIgc3R5bGU9ImZpbGw6cmdiKDEsMSwxKTsiLz4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8Y2lyY2xlIGN4PSIyNC4yIiBjeT0iMTkiIHI9IjAuNyIgc3R5bGU9ImZpbGw6cmdiKDEsMSwxKTsiLz4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZz4KICAgICAgICAgICAgICAgICAgICAgICAgPC9nPgogICAgICAgICAgICAgICAgICAgIDwvZz4KICAgICAgICAgICAgICAgIDwvZz4KICAgICAgICAgICAgICAgIDxwYXRoIGQ9Ik05LjcsMjAuNUM5LjQsMjAuNSA5LjIsMjAuMyA5LjIsMjBMOS4yLDE2QzkuMiwxNS43IDkuNCwxNS41IDkuNywxNS41QzEwLDE1LjUgMTAuMiwxNS43IDEwLjIsMTZMMTAuMiwyMEMxMC4yLDIwLjMgMTAsMjAuNSA5LjcsMjAuNVoiIHN0eWxlPSJmaWxsOnJnYigxODIsMjA3LDIzNCk7ZmlsbC1ydWxlOm5vbnplcm87Ii8+CiAgICAgICAgICAgICAgICA8cGF0aCBkPSJNMzEuNSwyMC41QzMxLjIsMjAuNSAzMSwyMC4zIDMxLDIwTDMxLDE2QzMxLDE1LjcgMzEuMiwxNS41IDMxLjUsMTUuNUMzMS44LDE1LjUgMzIsMTUuNyAzMiwxNkwzMiwyMEMzMiwyMC4zIDMxLjgsMjAuNSAzMS41LDIwLjVaIiBzdHlsZT0iZmlsbDpyZ2IoMTgyLDIwNywyMzQpO2ZpbGwtcnVsZTpub256ZXJvOyIvPgogICAgICAgICAgICAgICAgPGNpcmNsZSBjeD0iMTcuMyIgY3k9IjkuOCIgcj0iMC41IiBzdHlsZT0iZmlsbDp3aGl0ZTsiLz4KICAgICAgICAgICAgICAgIDxwYXRoIGQ9Ik0xMy43LDIzLjNDMTMuNiwyMy4zIDEzLjUsMjMuMyAxMy40LDIzLjJDMTIuMiwyMS43IDExLjYsMTkuOCAxMS42LDE3LjlDMTEuNiwxNi4zIDEyLDE0LjggMTIuOCwxMy40QzEzLjYsMTIuMSAxNC43LDExIDE2LDEwLjJDMTYuMiwxMC4xIDE2LjQsMTAuMiAxNi41LDEwLjNDMTYuNiwxMC41IDE2LjUsMTAuNyAxNi40LDEwLjhDMTMuOSwxMi4yIDEyLjMsMTQuOSAxMi4zLDE3LjhDMTIuMywxOS42IDEyLjksMjEuMyAxNCwyMi43QzE0LjEsMjIuOCAxNC4xLDIzLjEgMTMuOSwyMy4yQzEzLjgsMjMuMyAxMy44LDIzLjMgMTMuNywyMy4zWiIgc3R5bGU9ImZpbGw6d2hpdGU7ZmlsbC1ydWxlOm5vbnplcm87Ii8+CiAgICAgICAgICAgICAgICA8cGF0aCBkPSJNMjUuMiwyOEwyNS4yLDI3LjJDMjMuOCwyOCAyMi4zLDI4LjggMjAuNSwyOC44QzE4LjUsMjguOCAxNy4yLDI3LjkgMTUuOSwyNy4yTDE2LDI4QzE2LDI4IDE3LjUsMjkuNiAyMC42LDI5LjZDMjMuNSwyOS41IDI1LjIsMjggMjUuMiwyOFoiIHN0eWxlPSJmaWxsOnJnYigyMzMsMTAxLDc1KTtmaWxsLW9wYWNpdHk6MC4yNTtmaWxsLXJ1bGU6bm9uemVybzsiLz4KICAgICAgICAgICAgPC9nPgogICAgICAgIDwvZz4KICAgIDwvZz4KPC9zdmc+Cg==
    mediatype: image/svg+xml
  install:
    spec:
      clusterPermissions:
      - rules:
        - apiGroups:
          - ""
          resources:
          - configmaps
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - ""
          resources:
          - configmaps
          - endpoints
          - events
          - namespaces
          - persistentvolumeclaims
          - pods
          - secrets
          - serviceaccounts
          - services
          - services/finalizers
          verbs:
          - '*'
        - apiGroups:
          - ""
          resources:
          - pods
          - pods/log
          verbs:
          - get
        - apiGroups:
          - apiregistration.k8s.io
          resources:
          - apiservices
          verbs:
          - get
          - list
        - apiGroups:
          - apps
          resources:
          - daemonsets
          - deployments
          - replicasets
          - statefulsets
          verbs:
          - '*'
        - apiGroups:
          - apps
          resourceNames:
          - argocd-operator
          resources:
          - deployments/finalizers
          verbs:
          - update
        - apiGroups:
          - apps.openshift.io
          resources:
          - deploymentconfigs
          verbs:
          - '*'
        - apiGroups:
          - argoproj.io
          resources:
          - applications
          - appprojects
          verbs:
          - '*'
        - apiGroups:
          - argoproj.io
          resources:
          - argocdexports
          - argocdexports/finalizers
          - argocdexports/status
          verbs:
          - '*'
        - apiGroups:
          - argoproj.io
          resources:
          - argocds
          - argocds/finalizers
          - argocds/status
          verbs:
          - '*'
        - apiGroups:
          - argoproj.io
          resources:
          - notificationsconfigurations
          - notificationsconfigurations/finalizers
          verbs:
          - '*'
        - apiGroups:
          - autoscaling
          resources:
          - horizontalpodautoscalers
          verbs:
          - '*'
        - apiGroups:
          - batch
          resources:
          - cronjobs
          - jobs
          verbs:
          - '*'
        - apiGroups:
          - config.openshift.io
          resources:
          - clusterversions
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - monitoring.coreos.com
          resources:
          - prometheuses
          - prometheusrules
          - servicemonitors
          verbs:
          - '*'
        - apiGroups:
          - networking.k8s.io
          resources:
          - ingresses
          verbs:
          - '*'
        - apiGroups:
          - networking.k8s.io
          resources:
          - networkpolicies
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - oauth.openshift.io
          resources:
          - oauthclients
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - rbac.authorization.k8s.io
          resources:
          - '*'
          verbs:
          - '*'
        - apiGroups:
          - rbac.authorization.k8s.io
          resources:
          - clusterrolebindings
          - clusterroles
          verbs:
          - '*'
        - apiGroups:
          - route.openshift.io
          resources:
          - routes
          - routes/custom-host
          verbs:
          - '*'
        - apiGroups:
          - template.openshift.io
          resources:
          - templateconfigs
          - templateinstances
          - templates
          verbs:
          - '*'
        - apiGroups:
          - authentication.k8s.io
          resources:
          - tokenreviews
          verbs:
          - create
        - apiGroups:
          - authorization.k8s.io
          resources:
          - subjectaccessreviews
          verbs:
          - create
        serviceAccountName: argocd-operator-controller-manager
      deployments:
      - label:
          control-plane: controller-manager
        name: argocd-operator-controller-manager
        spec:
          replicas: 1
          selector:
            matchLabels:
              control-plane: controller-manager
          strategy: {}
          template:
            metadata:
              annotations:
                kubectl.kubernetes.io/default-container: manager
              labels:
                control-plane: controller-manager
            spec:
              containers:
              - args:
                - --leader-elect
                command:
                - /manager
                env:
                - name: WATCH_NAMESPACE
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.annotations['olm.targetNamespaces']
                - name: ENABLE_CONVERSION_WEBHOOK
                  value: "true"
                image: quay.io/argoprojlabs/argocd-operator:v0.13.0
                livenessProbe:
                  httpGet:
                    path: /healthz
                    port: 8081
                  initialDelaySeconds: 15
                  periodSeconds: 20
                name: manager
                ports:
                - containerPort: 9443
                  name: webhook-server
                  protocol: TCP
                readinessProbe:
                  httpGet:
                    path: /readyz
                    port: 8081
                  initialDelaySeconds: 5
                  periodSeconds: 10
                resources: {}
                securityContext:
                  allowPrivilegeEscalation: false
                  capabilities:
                    drop:
                    - ALL
                  readOnlyRootFilesystem: true
                  runAsNonRoot: true
                  seccompProfile:
                    type: RuntimeDefault
              securityContext:
                runAsNonRoot: true
              serviceAccountName: argocd-operator-controller-manager
              terminationGracePeriodSeconds: 10
      permissions:
      - rules:
        - apiGroups:
          - ""
          resources:
          - configmaps
          verbs:
          - get
          - list
          - watch
          - create
          - update
          - patch
          - delete
        - apiGroups:
          - coordination.k8s.io
          resources:
          - leases
          verbs:
          - get
          - list
          - watch
          - create
          - update
          - patch
          - delete
        - apiGroups:
          - ""
          resources:
          - events
          verbs:
          - create
          - patch
        serviceAccountName: argocd-operator-controller-manager
    strategy: deployment
  installModes:
  - supported: false
    type: OwnNamespace
  - supported: false
    type: SingleNamespace
  - supported: false
    type: MultiNamespace
  - supported: true
    type: AllNamespaces
  keywords:
  - gitops
  - kubernetes
  links:
  - name: Argo CD Project
    url: https://argoproj.github.io/argo-cd/
  - name: Operator Documentation
    url: https://argocd-operator.readthedocs.io
  - name: Operator Source Code
    url: https://github.com/argoproj-labs/argocd-operator
  maintainers:
  - email: aveerama@redhat.com
    name: Abhishek Veeramalla
  maturity: alpha
  provider:
    name: Argo CD Community
  replaces: argocd-operator.v0.12.0
  version: 0.13.0
  webhookdefinitions:
  - admissionReviewVersions:
    - v1alpha1
    - v1beta1
    containerPort: 443
    conversionCRDs:
    - argocds.argoproj.io
    deploymentName: argocd-operator-controller-manager
    generateName: cargocds.kb.io
    sideEffects: None
    targetPort: 9443
    type: ConversionWebhook
    webhookPath: /convert
